name: "Lesson 3 - Exercise 2"

on:
  workflow_dispatch:

jobs:
  generate-primes:
    runs-on: ubuntu-latest
    steps:
      - name: Generate the first 10 prime
        run: |
          import math

          # The cursor
          count = 3

          # The set that contains the prime numbers
          primes = set([1, 2])

          # Generate prime numbers until we have a total of 10
          # in the primes set
          while len(primes) < 10:
            isprime = True
            
            for x in range(2, int(math.sqrt(count) + 1)):
              if count % x == 0: 
                isprime = False
                break
            
            if isprime:
              primes.add(count)
            
            count += 1

          # Print the primes set
          print(primes)

          # Store the primes set in primes.txt
          with open('primes.txt', 'w') as f:
            for prime in primes:
              f.write(str(prime) + '\n')
        shell: python

      - name: Cache or retrieve the generated primes
        uses: actions/cache@v4
        with:
          path: primes.txt
          key: primes-${{ hashFiles('**/primes.txt') }}
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
            name: Prime File
            path: primes.txt

  verify-primes:
    runs-on: ubuntu-latest
    needs: generate-primes
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
            name: Prime File
            path: .


      - name: Verify the generated primes
        run: |
          # Read the primes.txt file
          with open('primes.txt', 'r') as f:
            primes = set([int(line.strip()) for line in f.readlines()])

          # The expected primes
          expected_primes = {1, 2, 3, 5, 7, 11, 13, 17, 19, 23}

          # Check if the generated primes are correct
          assert primes == expected_primes
        shell: python
